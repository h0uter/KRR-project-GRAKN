define

# ATTRIBUTES
storage_type sub attribute, value string;
name sub attribute, value string;
needs_packaging sub attribute, value boolean;


# ENTITIES
can_move sub entity,
  plays located_at:what;
 
product sub can_move,
    plays destination_at:what,
    owns storage_type,
    owns name,
    owns needs_packaging;

  
freezer_product sub product;
fresh_product sub product;
regular_product sub product;


can_not_move sub entity;
location sub can_not_move,
  owns name,
  plays located_at:where,
  plays destination_at:where;

freezer sub location;
packing_station sub location;
shelf sub location;
loading_table sub location;


# RULES
rule regular_products_dont_need_packaging:
  when {
    $prod isa regular_product;
  } then {
    $prod has needs_packaging false;
  };
rule fresh_products_need_packaging:
  when {
    $prod isa fresh_product;
  } then {
    $prod has needs_packaging true;
  };
rule freezer_products_dont_need_packaging:
  when {
    $prod isa freezer_product;
  } then {
    $prod has needs_packaging false;
  };


rule regular_products_on_shelf:
  when {
    $prod isa regular_product;
  } then {
    $prod has storage_type "shelf";
  };
rule fresh_products_on_shelf:
  when {
    $prod isa fresh_product;
  } then {
    $prod has storage_type "shelf";
  };
rule freezer_products_in_freezer:
  when {
    $prod isa freezer_product;
    # $dest isa freezer;
  } then {
    $prod has storage_type "freezer";
    # (where: $dest, what: $prod) isa destination_at;
  };


# RELATIONSHIP RULES EXPERIMENT

# rule freezer_products_in_freezer_relation:
#   when {
#     $prod isa freezer_product;
#     $dest isa freezer;
#   } then {
#     # $prod has storage_type "freezer";
#     (where: $dest, what: $prod) isa destination_at;
#   };


# RELATIONS
located_at sub relation,
  relates where,
  relates what;

destination_at sub relation,
  relates where,
  relates what;

